spring.shardingsphere.datasource.names=master0,master0slave,master1,master1slave
#master0
spring.shardingsphere.datasource.master0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://192.168.1.101:3306/kkb_mysql?characterEncoding=utf-8
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=1234567a
#master0slave
spring.shardingsphere.datasource.master0slave.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master0slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0slave.url=jdbc:mysql://192.168.1.104:3306/kkb_mysql?characterEncoding=utf-8
spring.shardingsphere.datasource.master0slave.username=root
spring.shardingsphere.datasource.master0slave.password=1234567a
#master1
spring.shardingsphere.datasource.master1.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://192.168.1.102:3306/kkb_mysql?characterEncoding=utf-8
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=1234567a
#master1slave
spring.shardingsphere.datasource.master1slave.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.master1slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1slave.url=jdbc:mysql://192.168.1.103:3306/kkb_mysql?characterEncoding=utf-8
spring.shardingsphere.datasource.master1slave.username=root
spring.shardingsphere.datasource.master1slave.password=1234567a
# 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
# 分库策略    user表和address表都用uid作为分库键
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{uid % 2}
#分表
#user
spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds$->{0..1}.user_$->{0..1}
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=age
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_->{age % 2}
spring.shardingsphere.sharding.tables.user.key-generator.column=uid
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
#address
spring.shardingsphere.sharding.tables.address.actual-data-nodes=ds$->{0..1}.address_->{0..1}
spring.shardingsphere.sharding.tables.address.table-strategy.inline.sharding-column=aid
spring.shardingsphere.sharding.tables.address.table-strategy.inline.algorithm-expression=address_->{aid % 2}
spring.shardingsphere.sharding.tables.address.key-generator.column=aid
spring.shardingsphere.sharding.tables.address.key-generator.type=SNOWFLAKE


#绑定表
spring.shardingsphere.sharding.binding-tables=user,address
#广播表
spring.shardingsphere.sharding.broadcast-tables=code

#ms
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=master0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=master0slave0
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=master1
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names=master1slave0
spring.shardingsphere.props.sql.show=true